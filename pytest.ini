[pytest]
DJANGO_SETTINGS_MODULE = breaksphere.settings
python_files = tests.py test_*.py *_tests.py
addopts = 
    --strict-markers
    --no-migrations
    --reuse-db
    --capture=no
    --cov=.
    --cov-report=xml
    --cov-report=html
    --cov-config=.coveragerc
    -v
    -ra
    -W ignore::DeprecationWarning
    --ds=breaksphere.settings

markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    api: marks tests as API tests
    websocket: marks tests as WebSocket tests
    celery: marks tests as Celery task tests
    model: marks tests as model tests
    view: marks tests as view tests
    serializer: marks tests as serializer tests
    auth: marks tests as authentication tests
    permissions: marks tests as permission tests
    async: marks tests as asynchronous tests

filterwarnings =
    ignore::DeprecationWarning
    ignore::django.utils.deprecation.RemovedInDjango50Warning
    ignore::django.utils.deprecation.RemovedInDjango51Warning

env =
    DJANGO_SETTINGS_MODULE=breaksphere.settings
    PYTHONPATH=.
    DJANGO_CONFIGURATION=Test
    CELERY_ALWAYS_EAGER=True
    CELERY_TASK_ALWAYS_EAGER=True

testpaths =
    accounts/tests
    status/tests
    rooms/tests
    pairing/tests
    events/tests
    feed/tests
    chat/tests
    icebreaker/tests

python_classes = Test*
python_functions = test_*

console_output_style = progress
log_cli = True
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Disable warning about DJANGO_SETTINGS_MODULE
django_find_project = true

# Configure test database
django_db_engine = django.db.backends.postgresql
django_db_name = breaksphere_test
django_db_user = postgres
django_db_password = postgres
django_db_host = localhost
django_db_port = 5432

# Configure test cache
django_cache_backend = django.core.cache.backends.locmem.LocMemCache

# Configure test email backend
django_email_backend = django.core.mail.backends.locmem.EmailBackend

# Configure test file storage
django_default_file_storage = django.core.files.storage.FileSystemStorage
django_staticfiles_storage = django.contrib.staticfiles.storage.StaticFilesStorage

# Configure test Celery
django_celery_always_eager = True
django_celery_task_always_eager = True
django_celery_task_eager_propagates = True

# Configure test channels
django_channels_default_backend = channels.layers.InMemoryChannelLayer
